import { Card, CardFooter } from "./ui/card";
import { Button } from "./ui/button";
import { ArrowLeft, ArrowRight } from "lucide-react";
import { FirstStep } from "./first-step";
import { useSearchParams } from "react-router-dom";
import { SecondStep } from "./second-step";
import { ThirdStep } from "./third-step";
import { KINDLE_EMAIL_KEY } from "../constants";

export function StepsLayout() {
    const [searchParams, setSearchParams] = useSearchParams();

    // Get the current step from URL params or default to 0
    const currentStep = Math.max(0, Math.min(parseInt(searchParams.get("step") || "0", 10), 2));

    // Start Instructions Handler: Reset to step 0
    const handleStartInstructions = () => {
        setSearchParams({ step: "0" });
    };

    // Step Navigation Handler: Moves between steps
    const handleSteps = (direction: "next" | "previous") => {
        let nextStep = currentStep;

        if (direction === "next") {
            if (currentStep === 1) {
                const hasStoredEmail = localStorage.getItem(KINDLE_EMAIL_KEY)
                if (!hasStoredEmail) {
                    alert("Kindle email is required")
                    return
                }
            }
            nextStep = Math.min(currentStep + 1, 2); // Prevent going past the last step
        } else if (direction === "previous") {
            nextStep = Math.max(currentStep - 1, 0); // Prevent going before the first step
        }

        setSearchParams({ step: nextStep.toString() });
    };

    return (
        <div className="h-screen flex flex-col gap-4 items-center text-center justify-center">
            {/* Logo / Branding */}
            <div>
                <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="100" height="100" viewBox="0 0 50 50"
                    fill="#FFFFFF">
                    <path d="M 13 4 C 8.037 4 4 8.037 4 13 L 4 37 C 4 41.963 8.037 46 13 46 L 37 46 C 41.103 46 44.565531 43.237562 45.644531 39.476562 C 45.656531 39.433563 45.666734 39.390656 45.677734 39.347656 C 45.762734 39.038656 45.829859 38.722391 45.880859 38.400391 C 45.894859 38.311391 45.909875 38.223766 45.921875 38.134766 C 45.968875 37.762766 46 37.385 46 37 L 46 13 C 46 8.037 41.963 4 37 4 L 13 4 z M 18.179688 7.6054688 C 18.348734 7.6170937 18.498781 7.6422969 18.613281 7.6855469 C 19.179281 7.8995469 18.66025 7.905125 19.28125 7.953125 C 22.68925 8.219125 21.22775 9.32075 22.71875 9.96875 C 22.85975 10.50375 23.393156 11.014766 23.660156 11.759766 C 24.008156 12.728766 23.659312 13.271516 23.320312 14.103516 C 23.054313 14.322516 23.263187 14.292094 22.992188 14.371094 C 22.963188 14.379094 22.947641 14.386578 22.931641 14.392578 C 22.921641 14.385578 22.888547 14.377047 22.810547 14.373047 C 22.722547 14.369047 22.666047 14.363469 22.623047 14.355469 C 21.720047 15.032469 22.241625 15.731922 22.265625 16.794922 L 21.457031 17.011719 C 21.341031 17.916719 21.222859 17.561187 20.880859 18.242188 C 20.221859 18.154187 20.695359 20.147922 18.068359 18.669922 C 17.540359 18.372922 17.502828 18.173641 17.173828 18.556641 C 17.136828 18.982641 17.360125 18.685734 17.703125 19.302734 C 18.015125 19.863734 18.420953 21.209766 19.251953 22.509766 L 21.001953 24.734375 C 21.634953 25.243375 21.965531 25.342953 21.394531 26.126953 C 21.919531 26.177953 21.973047 26.365766 22.248047 26.634766 C 23.716047 26.264766 26.673859 24.880109 27.380859 23.537109 C 27.170859 22.951109 27.461531 23.524797 26.894531 23.091797 C 27.879531 21.522797 29.964047 19.431563 31.248047 17.851562 L 34.150391 17.882812 C 33.657391 19.054813 32.219625 21.141406 30.640625 23.066406 C 30.542625 23.467406 30.509578 23.486937 30.392578 23.835938 C 30.009578 24.969938 30.331672 24.635094 29.013672 25.496094 L 28.765625 25.689453 C 27.307625 26.112453 27.026406 26.600609 25.691406 27.849609 L 28.380859 32.808594 C 28.780859 33.664594 29.054516 33.247437 29.603516 34.648438 C 29.835516 35.240437 29.755875 35.229172 29.296875 35.451172 L 29.75 36.080078 C 30.675 37.680078 30.701906 38.381922 32.628906 39.669922 C 33.311906 40.125922 34.225453 40.716453 34.939453 41.064453 C 37.297453 42.216453 37.794969 41.222281 37.792969 42.113281 C 37.791969 42.493281 37.429437 42.661437 37.148438 42.898438 C 38.337438 43.073437 39.323906 43.182 40.378906 43.125 C 39.377906 43.681 38.226 44 37 44 L 13 44 C 9.638 44 6.8233437 41.616172 6.1523438 38.451172 C 6.2503437 38.420172 6.3394062 38.386422 6.4414062 38.357422 C 7.5854063 38.033422 8.6575313 37.996516 9.7695312 37.728516 C 8.3255313 36.179516 8.6316875 36.148156 9.0546875 35.785156 L 7.5742188 35.734375 C 7.5102187 35.144375 7.6662813 34.457969 7.6132812 33.792969 L 7.078125 28.775391 L 7.140625 25.509766 L 7.4101562 24.652344 C 7.9771563 21.621344 9.0358437 21.015922 9.9648438 19.294922 C 12.799844 17.040922 11.48575 18.010609 12.59375 16.474609 C 13.00675 16.462609 13.390453 16.541484 13.689453 16.771484 C 14.045453 16.483484 13.911453 16.615078 14.189453 15.955078 C 14.160453 15.934078 14.10775 15.87925 14.09375 15.90625 L 13.65625 15.546875 C 13.21125 14.937875 13.341859 14.407875 13.255859 13.046875 C 13.258859 11.788875 13.632891 10.513578 14.212891 9.6425781 C 14.415891 9.3375781 15.954672 7.8853281 16.638672 7.7363281 C 16.999422 7.6575781 17.672547 7.5705938 18.179688 7.6054688 z M 22.6875 14.259766 C 22.580625 14.276641 22.452547 14.323516 22.623047 14.353516 C 22.625047 14.352516 22.626906 14.350609 22.628906 14.349609 C 22.880906 14.256109 22.794375 14.242891 22.6875 14.259766 z M 17.351562 27.431641 C 17.038563 27.992641 16.76625 29.305625 16.90625 30.015625 C 17.33825 30.049625 19.044641 28.889625 19.431641 28.640625 C 18.846641 28.166625 19.093031 29.038078 18.332031 28.330078 C 17.832031 27.866078 17.955563 27.572641 17.351562 27.431641 z M 23.332031 33.572266 C 22.930031 33.760266 20.365922 35.388937 19.919922 35.835938 L 16.652344 38.310547 C 22.215344 39.125547 25.869016 40.933109 28.666016 41.412109 C 28.801016 39.698109 29.038234 40.177109 26.865234 37.537109 C 26.408234 37.776109 26.168781 38.069672 25.675781 37.513672 C 25.355781 37.152672 25.106984 36.682078 24.958984 36.080078 C 24.694984 35.001078 23.680031 34.830266 23.332031 33.572266 z"></path>
                </svg>
            </div>
            <h1 className="text-2xl font-bold mb-4">PDF to Kindle Converter</h1>

            {/* Main Card with Steps */}
            <div className="w-full max-w-lg pb-4">
                <Card>
                    {/* Step Content */}
                    {currentStep === 0 && <FirstStep />}
                    {currentStep === 1 && <SecondStep />}
                    {currentStep === 2 && <ThirdStep />}

                    {/* Footer with Navigation */}
                    <CardFooter className="flex justify-between mt-4">
                    {currentStep === 0 ? (<div></div>) : (
                        <Button
                            variant="outline"
                            onClick={() => handleSteps("previous")}
                            aria-label="Go to the previous step"
                        >
                            <ArrowLeft className="mr-2" />
                            Previous
                        </Button>
                    )}
                        {currentStep === 2 ? (<div></div>) : (
                            <Button
                                variant="outline"
                                onClick={() => handleSteps("next")}
                                aria-label="Go to the next step"
                            >
                                Next
                                <ArrowRight className="ml-2" />
                            </Button>
                        )}
                    </CardFooter>
                </Card>

                {/* Start Instructions Button */}
                {currentStep != 0 && (
                    <div className="mt-4">
                        <Button onClick={handleStartInstructions}>Start Instructions</Button>
                    </div>
                )}
            </div>
        </div>
    );
}

export default StepsLayout;
